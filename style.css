/*!
	Theme Name: Scratch Pro
	Theme URI: http://mcintosh.io/bolt-pro-theme/
	Description: A Genesis Start Theme from Scratch with all the developer goodies and accessibility standards
	Author: Chris Mcintosh
	Author URI: http://mcintosh.io/
	Version: 0.0.1
	Template: genesis
	Template Version: 2.2.3
	License: GPL-2.0+
	License URI: http://www.gnu.org/licenses/gpl-2.0.html
*/
/* Default Colors */
/* Color Scheme */
/* Breakpoints */
/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
      ========================================================================== */
/**
    * Remove the margin in all browsers (opinionated).
    */
body {
  margin: 0; }

/**
    * Add the correct display in IE 9-.
    */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
    * Correct the font size and margin on `h1` elements within `section` and
    * `article` contexts in Chrome, Firefox, and Safari.
    */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
      ========================================================================== */
/**
    * Add the correct display in IE 9-.
    * 1. Add the correct display in IE.
    */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
    * Add the correct margin in IE 8.
    */
figure {
  margin: 1em 40px; }

/**
    * 1. Add the correct box sizing in Firefox.
    * 2. Show the overflow in Edge and IE.
    */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
    * 1. Correct the inheritance and scaling of font size in all browsers.
    * 2. Correct the odd `em` font sizing in all browsers.
    */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
      ========================================================================== */
/**
    * 1. Remove the gray background on active links in IE 10.
    * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
    */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
    * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
    * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
    */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
    * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
    */
b,
strong {
  font-weight: inherit; }

/**
    * Add the correct font weight in Chrome, Edge, and Safari.
    */
b,
strong {
  font-weight: bolder; }

/**
    * 1. Correct the inheritance and scaling of font size in all browsers.
    * 2. Correct the odd `em` font sizing in all browsers.
    */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
    * Add the correct font style in Android 4.3-.
    */
dfn {
  font-style: italic; }

/**
    * Add the correct background and color in IE 9-.
    */
mark {
  background-color: #ff0;
  color: #000; }

/**
    * Add the correct font size in all browsers.
    */
small {
  font-size: 80%; }

/**
    * Prevent `sub` and `sup` elements from affecting the line height in
    * all browsers.
    */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
      ========================================================================== */
/**
    * Add the correct display in IE 9-.
    */
audio,
video {
  display: inline-block; }

/**
    * Add the correct display in iOS 4-7.
    */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
    * Remove the border on images inside links in IE 10-.
    */
img {
  border-style: none; }

/**
    * Hide the overflow in IE.
    */
svg:not(:root) {
  overflow: hidden; }

/* Forms
      ========================================================================== */
/**
    * 1. Change the font styles in all browsers (opinionated).
    * 2. Remove the margin in Firefox and Safari.
    */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
    * Show the overflow in IE.
    * 1. Show the overflow in Edge.
    */
button,
input {
  /* 1 */
  overflow: visible; }

/**
    * Remove the inheritance of text transform in Edge, Firefox, and IE.
    * 1. Remove the inheritance of text transform in Firefox.
    */
button,
select {
  /* 1 */
  text-transform: none; }

/**
    * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
    *    controls in Android 4.
    * 2. Correct the inability to style clickable types in iOS and Safari.
    */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
    * Remove the inner border and padding in Firefox.
    */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
    * Restore the focus styles unset by the previous rule.
    */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
    * Correct the padding in Firefox.
    */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
    * 1. Correct the text wrapping in Edge and IE.
    * 2. Correct the color inheritance from `fieldset` elements in IE.
    * 3. Remove the padding so developers are not caught out when they zero out
    *    `fieldset` elements in all browsers.
    */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
    * 1. Add the correct display in IE 9-.
    * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
    */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
    * Remove the default vertical scrollbar in IE.
    */
textarea {
  overflow: auto; }

/**
    * 1. Add the correct box sizing in IE 10-.
    * 2. Remove the padding in IE 10-.
    */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
    * Correct the cursor style of increment and decrement buttons in Chrome.
    */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
    * 1. Correct the odd appearance in Chrome and Safari.
    * 2. Correct the outline style in Safari.
    */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
    * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
    */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
    * 1. Correct the inability to style clickable types in iOS and Safari.
    * 2. Change font properties to `inherit` in Safari.
    */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
      ========================================================================== */
/*
    * Add the correct display in IE 9-.
    * 1. Add the correct display in Edge, IE, and Firefox.
    */
details,
menu {
  display: block; }

/*
    * Add the correct display in all browsers.
    */
summary {
  display: list-item; }

/* Scripting
      ========================================================================== */
/**
    * Add the correct display in IE 9-.
    */
canvas {
  display: inline-block; }

/**
    * Add the correct display in IE.
    */
template {
  display: none; }

/* Hidden
      ========================================================================== */
/**
    * Add the correct display in IE 10-.
    */
[hidden] {
  display: none; }

/*
Accessibility Extras - Taken from the Leiden theme & Genesis Accessible plugin (genesis-accessible.org)
---------------------------------------------------------------------------------------------------- */
/*
* Skiplinks
* Hide visually but not from screen readers
* and keyboard users
--------------------------------------------- */
.more-link {
  position: relative; }

.screen-reader-text,
.screen-reader-text span,
.search-form label {
  clip: rect(0, 0, 0, 0);
  height: 0;
  position: absolute;
  width: 0; }

.screen-reader-shortcut {
  clip: rect(0, 0, 0, 0);
  left: 10px;
  position: absolute;
  top: 10px; }

.screen-reader-shortcut:focus {
  background: #fff;
  clip: auto;
  display: block;
  height: auto;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  width: auto;
  z-index: 100000; }

.wpacc-genesis-skip-link li,
.genwpacc-genesis-skip-link li {
  height: 0;
  width: 0;
  list-style: none; }

/* Display outline on focus */
:focus {
  color: #4f4f4f;
  outline: #d4d4d4 dotted thin; }

a {
  color: #0964dd;
  border-bottom: 1px dotted;
  font-weight: 700;
  text-decoration: none;
  word-wrap: break-word; }
  a:hover {
    color: #545454; }

h1,
h2,
h3,
h4,
h5,
h6 {
  color: #1c1c1c;
  font-weight: 700;
  line-height: 1.5;
  margin: 0;
  margin-bottom: 16px;
  padding: 0; }

body {
  font-size: 16px; }

.site-header {
  background: #e6e6e6; }
  .site-header .header__wrap {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: row;
        -ms-flex-direction: row;
            flex-direction: row;
    -webkit-justify-content: space-between;
        -ms-flex-pack: justify;
            justify-content: space-between; }
    .site-header .header__wrap > div {
      max-width: 50%;
      width: 50%;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-flex-direction: column;
          -ms-flex-direction: column;
              flex-direction: column;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center; }
  .site-header ul {
    list-style-type: none; }
  .site-header li {
    float: left;
    position: relative; }
    .site-header li a {
      border: none;
      display: block;
      padding: 0 16px;
      line-height: 70px;
      text-decoration: none; }

.menu-text {
  list-style-type: none;
  padding: 0; }

.site-title {
  margin: 0;
  text-align: center;
  font-size: 1.8rem;
  font-weight: 300; }
  .site-title img {
    max-height: 100px;
    text-align: center;
    object-fit: scale-down;
    width: 60%; }
    @media screen and (max-width: 415px) {
      .site-title img {
        width: 100%; } }
  .site-title a {
    border: none;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex; }
  @media screen and (min-width: 800px) {
    .site-title {
      text-align: left; } }

.canvas-toggle {
  -webkit-align-self: flex-end;
      -ms-flex-item-align: end;
          align-self: flex-end;
  background: #333;
  color: #fff;
  padding: 10px 20px;
  margin-right: 8px; }

@media screen and (min-width: 640px) {
  .canvas-toggle {
    display: none; } }

@media screen and (max-width: 640px) {
  .site-header .primary-menu {
    display: none; } }

.off-canvas {
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  pointer-events: none;
  z-index: 150;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end; }

.canvas--visible {
  pointer-events: auto; }

.off-canvas-content {
  background-color: #fff;
  color: #fff;
  position: relative;
  max-width: 640px;
  width: 100%;
  height: 100%;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.5);
  -webkit-transform: translateX(103%);
  -ms-transform: translateX(103%);
      transform: translateX(103%);
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  will-change: transform;
  z-index: 160;
  pointer-events: auto; }

.canvas--visible .off-canvas-content {
  -webkit-transform: none;
  -ms-transform: none;
      transform: none; }

.canvas--animatable .off-canvas-content {
  transition: all 130ms ease-in; }

.canvas--visible.canvas--animatable .off-canvas-content {
  transition: all 330ms ease-out; }

.off-canvas:after {
  content: '';
  display: block;
  position: absolute;
  right: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.4);
  opacity: 0;
  will-change: opacity;
  pointer-events: none;
  transition: opacity 0.3s cubic-bezier(0, 0, 0.3, 1); }

.canvas--visible.off-canvas:after {
  opacity: 1;
  pointer-events: auto; }

.close-canvas {
  position: absolute;
  display: block;
  top: 1vh;
  right: 1vh;
  width: 60px;
  height: 60px;
  outline: none;
  border: none;
  background: transparent;
  font-size: 30px; }

.off-canvas .primary-menu {
  margin-top: 60px; }

.off-canvas .primary-menu a {
  line-height: 50px;
  font-size: 24px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
